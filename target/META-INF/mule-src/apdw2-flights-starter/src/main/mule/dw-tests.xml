<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<flow name="matchOperatorTest" doc:id="bd9e2b8e-5637-40a9-869d-91d6eb33acba">
		<ee:transform doc:name="Transform Message" doc:id="7b9b9a41-7682-42c7-b5c6-a2a291a395ec">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

var americanFlights =
[
  {
    "ID": 5,
    "code": "rree1093",
    "price": 142,
    "departureDate": "2018-02-11T00:00:00",
    "origin": "MUA",
    "destination": "SFO",
    "emptySeats": 1,
    "plane": {
      "type": "Boeing 737",
      "totalSeats": 150
    }
  },
  {
    "ID": 7,
    "code": "eefd1994",
    "price": 676,
    "departureDate": "2018-01-01T00:00:00",
    "origin": "MUA",
    "destination": "SFO",
    "emptySeats": 0,
    "plane": {
      "type": "Boeing 777",
      "totalSeats": 300
    }
  },
  {
    "ID": 8,
    "code": "ffee2000",
    "price": 300,
    "departureDate": "2018-02-20T00:00:00",
    "origin": "MUA",
    "destination": "SFO",
    "emptySeats": 30,
    "plane": {
      "type": "Boeing 737",
      "totalSeats": 150
    }
  },
  {
    "ID": 9,
    "code": "eefd3000",
    "price": 900,
    "departureDate": "2018-02-01T00:00:00",
    "origin": "MUA",
    "destination": "SFO",
    "emptySeats": 0,
    "plane": {
      "type": "Boeing 737",
      "totalSeats": 150
    }
  }
  ]
  

  
---
americanFlights



]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="addAndConcat" doc:id="7788e1a4-3791-42a3-a5b5-364f4baf7c12" >
		<ee:transform doc:name="WT 4-2 add and remove" doc:id="242daf56-18ab-4532-9688-32ac68811d62" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

//Mortgage payments
var paymentsArr = [1000, 2000, 1000, 3000]

//Mortgage holder's name
var customerObj = {
    firstName: "Maw Shein",
    lastName: "Win"
}

//Mortgage holder's property address
var addressObj = {
    street: "Elm st.",
    number: 42,
    city: "Oakland",
    state: "CA"
}
---

{
	removeKeys5 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) -- namesOf(customerObj)[0 to 0],
	namesOf 				: namesOf(((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr)),
	removeKeys4 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) -- ["firstName", "address"],
	removeKeys3 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) -- lastName : "Win",
	removeKeys2 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) - "firstName" -"lastName",
	removeKeys 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) - "firstName",
	concatObjects5 		: (customerObj ++ address : (addressObj ++ country : "UK"))
													++ payments : paymentsArr,
	concatObjects4 		: customerObj ++ address : (addressObj ++ country : "UK"),
	concatObjects3 		: customerObj ++ address : addressObj,
	//addingObjects		: customerObj + addressObj,
	concatObjects2 		: addressObj ++ customerObj,
	concatObjects 		: customerObj ++ addressObj,
	addArrays			: paymentsArr + paymentsArr,
	concatArrays		: paymentsArr ++ paymentsArr,
	addArrayAndObject	: paymentsArr + customerObj,
	addingToArrays		: [] + customerObj + addressObj + 1 + [] + "Steve", 
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Simple add and remove" doc:id="90ab3c57-0578-4d1a-86df-76028c59ece0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

//Mortgage payments
var array1 = [1, true, "a", "1"]

var object1 = {
    one: "ONE",
    two: "TWO"
}


---
{
	addArrays: null,//array1 + array1
	concatArrays: null, //array1 ++ array1 
	addArrayAndObject: null,//array1 + object1
	addObjectAndArrayError: null, //object1 + array1
	concatArrayAndObjectError: null, //array1 ++ object1
	addObjectsError: null, //object1 + object1
	concatObjectAndArrayError: null, //object1 ++ array1
	concatObjects: null, //object1 ++ object1
	removeKey: null, //object1 - "one"
	removeEvalParens1: null, //object1 - "one" - "two"
	removeEvalParens2: null, //(object1 - "one") - "two"
	removeMinusMinusError: null,//object1 -- "one"
	removeKeyValue: null, //object1 -- one:"ONE"
	removeKeyBadValue: null, //object1 -- one: "BAD"
	removeObject: null, //object1 -- object1
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="dw-testsFlow" doc:id="62af00f9-01a4-4f1c-9d39-2f64ace61d1b" >
		<ee:transform doc:name="Transform Message" doc:id="7ccb7871-b163-4278-99ca-5b1e72f0f9a7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml

var flightsPayload = readUrl("classpath://examples/joinedFlightsAndAirportsNS.xml", "application/xml")
---
flightsPayload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="dw-infix" doc:id="ab784d48-1360-4730-bca4-682dd15cfb1e" >
		<ee:transform doc:name="Transform Message" doc:id="a5f53447-0090-4755-8999-ea83591ecc93" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

var data = readUrl("classpath://examples/joinedFlightsAndAirports.xml", "application/xml")
---
data..*flight
//distinctBy $
//filter $."available-seats" as Number > 0 and $.price as Number <= 496
filter not ($."available-seats" as Number > 0 and $.price as Number <= 496)
//filter ($."available-seats" as Number == 0 and $.price as Number > 496)
//minBy $.price
//maxBy $.price
orderBy $.price
orderBy $."airline-name"
groupBy $."available-seats"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="test" doc:id="ad52629b-0e6a-4c5a-b1c2-6b0355c21b0c" >
		<ee:transform doc:name="Transform Message" doc:id="38ffb876-5b2b-4cd9-8d85-e88c9fe0155b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

fun formatString(anInputString: String, formattter) =
	formattter(anInputString)


---

//formatString("helloWorld", upper)

//"helloWorld" formatString upper

//formatString("helloWorld", (inStr) -> lower(inStr))

"helloWorld" formatString (inStr) -> lower(inStr replace "World" with " There!")]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="addAndConcat1" doc:id="ad0ee922-396d-45d6-90da-d6e1c345d978" >
		<ee:transform doc:name="WT 4-2 add and remove" doc:id="1a9240db-982c-4791-bdfd-b02cd17751af" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

//Mortgage payments
var paymentsArr = [1000, 2000, 1000, 3000]

//Mortgage holder's name
var customerObj = {
    firstName: "Maw Shein",
    lastName: "Win"
}

//Mortgage holder's property address
var addressObj = {
    street: "Elm st.",
    number: 42,
    city: "Oakland",
    state: "CA"
}
---

{
	removeKeys5 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) -- namesOf(customerObj)[0 to 0],
	namesOf 				: namesOf(((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr)),
	removeKeys4 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) -- ["firstName", "address"],
	removeKeys3 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) -- lastName : "Win",
	removeKeys2 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) - "firstName" -"lastName",
	removeKeys 			: ((customerObj ++ address : (addressObj ++ country : "UK"))
												++ payments : paymentsArr) - "firstName",
	concatObjects5 		: (customerObj ++ address : (addressObj ++ country : "UK"))
													++ payments : paymentsArr,
	concatObjects4 		: customerObj ++ address : (addressObj ++ country : "UK"),
	concatObjects3 		: customerObj ++ address : addressObj,
	//addingObjects		: customerObj + addressObj,
	concatObjects2 		: addressObj ++ customerObj,
	concatObjects 		: customerObj ++ addressObj,
	addArrays			: paymentsArr + paymentsArr,
	concatArrays		: paymentsArr ++ paymentsArr,
	addArrayAndObject	: paymentsArr + customerObj,
	addingToArrays		: [] + customerObj + addressObj + 1 + [] + "Steve", 
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Simple add and remove" doc:id="7022e22f-ac95-4653-85fa-256f969c6c0f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json

//Mortgage payments
var array1 = [1, true, "a", "1"]

var object1 = {
    one: "ONE",
    two: "TWO"
}


---
{
	addArrays: null,//array1 + array1
	concatArrays: null, //array1 ++ array1 
	addArrayAndObject: null,//array1 + object1
	addObjectAndArrayError: null, //object1 + array1
	concatArrayAndObjectError: null, //array1 ++ object1
	addObjectsError: null, //object1 + object1
	concatObjectAndArrayError: null, //object1 ++ array1
	concatObjects: null, //object1 ++ object1
	removeKey: null, //object1 - "one"
	removeEvalParens1: null, //object1 - "one" - "two"
	removeEvalParens2: null, //(object1 - "one") - "two"
	removeMinusMinusError: null,//object1 -- "one"
	removeKeyValue: null, //object1 -- one:"ONE"
	removeKeyBadValue: null, //object1 -- one: "BAD"
	removeObject: null, //object1 -- object1
	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
